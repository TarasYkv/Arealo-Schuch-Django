# Generated by Django 5.2.1 on 2025-08-25 10:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PDFDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Titel des Dokuments', max_length=255)),
                ('original_filename', models.CharField(help_text='Originalname der Datei', max_length=255)),
                ('file', models.FileField(help_text='PDF-Datei', upload_to='pdfs/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('file_size', models.IntegerField(help_text='Dateigröße in Bytes')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdf_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PDF Dokument',
                'verbose_name_plural': 'PDF Dokumente',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='PDFSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ai_model', models.CharField(choices=[('openai_gpt4o', 'OpenAI GPT-4o (128k Token, $2.50/$10.00 pro 1M Token)'), ('openai_gpt4o_mini', 'OpenAI GPT-4o Mini (128k Token, $0.15/$0.60 pro 1M Token)'), ('openai_gpt4_turbo', 'OpenAI GPT-4 Turbo (128k Token, $10.00/$30.00 pro 1M Token)'), ('openai_gpt4', 'OpenAI GPT-4 (8k Token, $30.00/$60.00 pro 1M Token)'), ('openai_gpt35_turbo', 'OpenAI GPT-3.5 Turbo (16k Token, $0.50/$1.50 pro 1M Token)'), ('google_gemini_pro', 'Google Gemini Pro (1M Token, $0.50/$1.50 pro 1M Token)'), ('google_gemini_flash', 'Google Gemini Flash (1M Token, $0.075/$0.30 pro 1M Token)'), ('anthropic_claude_opus', 'Anthropic Claude-3 Opus (200k Token, $15.00/$75.00 pro 1M Token)'), ('anthropic_claude_sonnet', 'Anthropic Claude-3.5 Sonnet (200k Token, $3.00/$15.00 pro 1M Token)'), ('anthropic_claude_haiku', 'Anthropic Claude-3 Haiku (200k Token, $0.25/$1.25 pro 1M Token)')], help_text='Verwendetes KI-Modell', max_length=30)),
                ('status', models.CharField(choices=[('pending', 'Ausstehend'), ('processing', 'In Bearbeitung'), ('completed', 'Abgeschlossen'), ('error', 'Fehler')], default='pending', max_length=20)),
                ('extracted_text', models.TextField(blank=True, help_text='Extrahierter Text aus der PDF')),
                ('summary_text', models.TextField(blank=True, help_text='Zusammenfassung des Dokuments')),
                ('structured_data', models.JSONField(blank=True, default=dict, help_text='Strukturierte Daten (Positionen, etc.)')),
                ('summary_pdf', models.FileField(blank=True, help_text='Generierte Zusammenfassungs-PDF', null=True, upload_to='pdf_summaries/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, help_text='Fehlermeldung bei Problemen')),
                ('processing_time', models.FloatField(blank=True, help_text='Verarbeitungszeit in Sekunden', null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='summaries', to='pdf_sucher.pdfdocument')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PDF Zusammenfassung',
                'verbose_name_plural': 'PDF Zusammenfassungen',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenderPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_number', models.CharField(help_text='Positionsnummer', max_length=50)),
                ('title', models.CharField(help_text='Titel/Beschreibung der Position', max_length=500)),
                ('description', models.TextField(blank=True, help_text='Detaillierte Beschreibung')),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, help_text='Menge/Anzahl', max_digits=10, null=True)),
                ('unit', models.CharField(blank=True, default='', help_text='Einheit (Stk, m², kg, etc.)', max_length=50, null=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, help_text='Einzelpreis', max_digits=10, null=True)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, help_text='Gesamtpreis', max_digits=15, null=True)),
                ('category', models.CharField(blank=True, help_text='Kategorie/Gewerk', max_length=200)),
                ('page_reference', models.IntegerField(blank=True, help_text='Seitenverweis im Original', null=True)),
                ('summary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='pdf_sucher.pdfsummary')),
            ],
            options={
                'verbose_name': 'Ausschreibungsposition',
                'verbose_name_plural': 'Ausschreibungspositionen',
                'ordering': ['position_number'],
            },
        ),
    ]
