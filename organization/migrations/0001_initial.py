# Generated by Django 5.2.1 on 2025-08-25 10:37

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CallParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('invited', 'Invited'), ('joined', 'Joined'), ('left', 'Left'), ('rejected', 'Rejected')], default='invited', max_length=20, verbose_name='Status')),
                ('joined_at', models.DateTimeField(blank=True, null=True, verbose_name='Beigetreten um')),
                ('left_at', models.DateTimeField(blank=True, null=True, verbose_name='Verlassen um')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='org_call_participations', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Anruf-Teilnehmer',
                'verbose_name_plural': 'Anruf-Teilnehmer',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titel')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('start_time', models.DateTimeField(verbose_name='Startzeit')),
                ('end_time', models.DateTimeField(verbose_name='Endzeit')),
                ('location', models.CharField(blank=True, max_length=300, verbose_name='Ort')),
                ('priority', models.CharField(choices=[('low', 'Niedrig'), ('medium', 'Mittel'), ('high', 'Hoch'), ('urgent', 'Dringend')], default='medium', max_length=10, verbose_name='Priorität')),
                ('reminder_minutes', models.IntegerField(default=15, verbose_name='Erinnerung (Minuten vorher)')),
                ('is_all_day', models.BooleanField(default=False, verbose_name='Ganztägig')),
                ('is_recurring', models.BooleanField(default=False, verbose_name='Wiederkehrend')),
                ('recurrence_pattern', models.CharField(blank=True, max_length=50, verbose_name='Wiederholungsmuster')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Aktualisiert am')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_events', to=settings.AUTH_USER_MODEL, verbose_name='Organisator')),
            ],
            options={
                'verbose_name': 'Termin',
                'verbose_name_plural': 'Termine',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='EventParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(choices=[('pending', 'Ausstehend'), ('accepted', 'Angenommen'), ('declined', 'Abgelehnt'), ('maybe', 'Vielleicht')], default='pending', max_length=10, verbose_name='Antwort')),
                ('response_time', models.DateTimeField(blank=True, null=True, verbose_name='Antwortzeit')),
                ('notes', models.TextField(blank=True, verbose_name='Notizen')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.event', verbose_name='Termin')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Terminpartizipant',
                'verbose_name_plural': 'Terminpartizipanten',
                'unique_together': {('event', 'user')},
            },
        ),
        migrations.AddField(
            model_name='event',
            name='participants',
            field=models.ManyToManyField(blank=True, through='organization.EventParticipant', to=settings.AUTH_USER_MODEL, verbose_name='Teilnehmer'),
        ),
        migrations.CreateModel(
            name='IdeaBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titel')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('canvas_data', models.JSONField(default=dict, verbose_name='Canvas-Daten')),
                ('width', models.IntegerField(default=1200, verbose_name='Breite')),
                ('height', models.IntegerField(default=800, verbose_name='Höhe')),
                ('background_color', models.CharField(default='#ffffff', max_length=7, verbose_name='Hintergrundfarbe')),
                ('is_public', models.BooleanField(default=False, verbose_name='Öffentlich')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Aktualisiert am')),
                ('collaborators', models.ManyToManyField(blank=True, related_name='collaborated_boards', to=settings.AUTH_USER_MODEL, verbose_name='Mitarbeiter')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_boards', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
            ],
            options={
                'verbose_name': 'Ideenboard',
                'verbose_name_plural': 'Ideenboards',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='BoardElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element_type', models.CharField(choices=[('line', 'Linie'), ('arrow', 'Pfeil'), ('rectangle', 'Rechteck'), ('circle', 'Kreis'), ('triangle', 'Dreieck'), ('text', 'Text'), ('image', 'Bild'), ('freehand', 'Freihand')], max_length=20, verbose_name='Element-Typ')),
                ('data', models.JSONField(verbose_name='Element-Daten')),
                ('position_x', models.IntegerField(verbose_name='X-Position')),
                ('position_y', models.IntegerField(verbose_name='Y-Position')),
                ('width', models.IntegerField(default=100, verbose_name='Breite')),
                ('height', models.IntegerField(default=100, verbose_name='Höhe')),
                ('color', models.CharField(default='#000000', max_length=7, verbose_name='Farbe')),
                ('stroke_width', models.IntegerField(default=2, verbose_name='Strichstärke')),
                ('opacity', models.FloatField(default=1.0, verbose_name='Transparenz')),
                ('rotation', models.FloatField(default=0.0, verbose_name='Rotation (Grad)')),
                ('layer_index', models.IntegerField(default=0, verbose_name='Ebenen-Index')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Erstellt von')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='organization.ideaboard', verbose_name='Board')),
            ],
            options={
                'verbose_name': 'Board-Element',
                'verbose_name_plural': 'Board-Elemente',
                'ordering': ['layer_index', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titel')),
                ('content', models.TextField(blank=True, verbose_name='Inhalt')),
                ('image', models.ImageField(blank=True, null=True, upload_to='notes/images/', verbose_name='Bild')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Aktualisiert am')),
                ('is_public', models.BooleanField(default=False, verbose_name='Öffentlich')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('mentioned_users', models.ManyToManyField(blank=True, related_name='mentioned_in_notes', to=settings.AUTH_USER_MODEL, verbose_name='Erwähnte Benutzer')),
            ],
            options={
                'verbose_name': 'Notiz',
                'verbose_name_plural': 'Notizen',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='VideoCall',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('call_type', models.CharField(choices=[('audio', 'Audio'), ('video', 'Video')], default='video', max_length=10, verbose_name='Anruf-Typ')),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('ringing', 'Ringing'), ('connected', 'Connected'), ('ended', 'Ended'), ('missed', 'Missed'), ('rejected', 'Rejected')], default='initiated', max_length=20, verbose_name='Status')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Gestartet um')),
                ('connected_at', models.DateTimeField(blank=True, null=True, verbose_name='Verbunden um')),
                ('ended_at', models.DateTimeField(blank=True, null=True, verbose_name='Beendet um')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Dauer')),
                ('caller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='made_org_calls', to=settings.AUTH_USER_MODEL, verbose_name='Anrufer')),
                ('participants', models.ManyToManyField(through='organization.CallParticipant', to=settings.AUTH_USER_MODEL, verbose_name='Teilnehmer')),
            ],
            options={
                'verbose_name': 'Video-Anruf',
                'verbose_name_plural': 'Video-Anrufe',
                'ordering': ['-started_at'],
            },
        ),
        migrations.AddField(
            model_name='callparticipant',
            name='call',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='call_participants', to='organization.videocall', verbose_name='Anruf'),
        ),
        migrations.CreateModel(
            name='EventReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_time', models.DateTimeField(verbose_name='Erinnerungszeit')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Gesendet')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Gesendet am')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='organization.event', verbose_name='Termin')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Termin-Erinnerung',
                'verbose_name_plural': 'Termin-Erinnerungen',
                'unique_together': {('event', 'user')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='callparticipant',
            unique_together={('call', 'user')},
        ),
    ]
