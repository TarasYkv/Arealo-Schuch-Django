#!/usr/bin/env python3
"""
Manueller OAuth Token Setup
F√ºr den Fall, dass der automatische Flow nicht funktioniert
"""

import os
import sys
import django
from pathlib import Path

# Django Setup
sys.path.append(str(Path(__file__).parent))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'arealo_schuch.settings')
django.setup()

from django.contrib.auth import get_user_model
from accounts.models import ZohoAPISettings
from mail_app.models import EmailAccount
from django.utils import timezone
from datetime import timedelta

User = get_user_model()

def manual_token_setup():
    """Manueller Token-Setup falls OAuth Flow nicht funktioniert"""
    
    print("=" * 60)
    print("üîß MANUELLER OAUTH TOKEN SETUP")
    print("=" * 60)
    
    user = User.objects.first()
    if not user:
        print("‚ùå Kein User gefunden")
        return
    
    print("Dieser Modus ist f√ºr den Fall, dass Zoho Console erreichbar ist")
    print("und du dort einen Access Token generieren kannst.\n")
    
    print("üìã SCHRITTE:")
    print("1. Gehe zu Zoho Console (falls erreichbar)")
    print("2. Self Client ‚Üí Generate Token")
    print("3. Scopes: ZohoMail.accounts.READ,ZohoMail.folders.READ,ZohoMail.messages.READ,ZohoMail.messages.CREATE")
    print("4. Access Token kopieren")
    print("5. Hier eingeben\n")
    
    # Zoho Settings laden
    try:
        settings = ZohoAPISettings.objects.get(user=user)
        print(f"‚úÖ ZohoAPISettings gefunden")
        print(f"Region: {settings.region}")
        print(f"Client ID: {settings.client_id[:10]}...")
    except:
        print("‚ùå ZohoAPISettings nicht gefunden")
        return
    
    # Manuellen Token eingeben
    print("\n" + "‚îÄ" * 50)
    manual_token = input("üìù Access Token eingeben (oder Enter f√ºr Abbruch): ").strip()
    
    if not manual_token:
        print("‚ùå Abgebrochen")
        return
    
    if len(manual_token) < 50:
        print("‚ùå Token zu kurz - vermutlich ung√ºltig")
        return
    
    # Email eingeben
    email_address = input("üìß Email Adresse eingeben: ").strip()
    if not email_address or '@' not in email_address:
        email_address = "kontakt@workloom.de"  # Fallback
        print(f"üìß Verwende Fallback: {email_address}")
    
    try:
        # Alte Accounts l√∂schen
        EmailAccount.objects.filter(user=user).delete()
        
        # ZohoAPISettings aktualisieren
        settings.access_token = manual_token
        settings.refresh_token = ""  # Kein Refresh Token bei manueller Eingabe
        settings.token_expires_at = timezone.now() + timedelta(hours=1)  # 1 Stunde
        settings.is_active = True
        settings.save()
        
        # EmailAccount erstellen
        account = EmailAccount.objects.create(
            user=user,
            email_address=email_address,
            display_name=email_address,
            access_token=manual_token,
            refresh_token="",  # Kein Refresh Token
            token_expires_at=timezone.now() + timedelta(hours=1),
            is_default=True,
            sync_enabled=True,
            is_active=True
        )
        
        print(f"\n‚úÖ ERFOLGREICH ERSTELLT!")
        print(f"üìß Email Account: {account.email_address}")
        print(f"‚è∞ Token g√ºltig bis: {account.token_expires_at}")
        print(f"\n‚ö†Ô∏è  HINWEIS: Manueller Token hat kurze G√ºltigkeit")
        print(f"Nach Ablauf muss OAuth Flow funktionieren f√ºr automatische Erneuerung")
        
    except Exception as e:
        print(f"‚ùå Fehler beim Erstellen: {e}")

def show_current_status():
    """Zeigt aktuellen Status"""
    user = User.objects.first()
    accounts = EmailAccount.objects.filter(user=user)
    
    print("\n" + "=" * 40)
    print("üìä AKTUELLER STATUS")
    print("=" * 40)
    
    if accounts.exists():
        for account in accounts:
            print(f"‚úÖ {account.email_address}")
            print(f"   Token: {'‚úÖ Vorhanden' if account.access_token else '‚ùå Fehlt'}")
            print(f"   G√ºltig bis: {account.token_expires_at}")
            print(f"   Status: {account.status}")
    else:
        print("‚ùå Keine Email Accounts")

if __name__ == "__main__":
    show_current_status()
    
    choice = input("\nüîß Manueller Token Setup starten? (y/N): ").strip().lower()
    if choice in ['y', 'yes', 'ja']:
        manual_token_setup()
        show_current_status()
    else:
        print("üëã Setup abgebrochen")