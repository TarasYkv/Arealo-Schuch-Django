# Generated by Django 5.2.1 on 2025-08-29 10:39

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Anzeigenname')),
                ('ad_type', models.CharField(choices=[('image', 'Bild'), ('html', 'HTML/Rich Content'), ('video', 'Video'), ('text', 'Text')], default='image', max_length=20)),
                ('image', models.ImageField(blank=True, null=True, upload_to='loomads/images/%Y/%m/', verbose_name='Bild')),
                ('video_url', models.URLField(blank=True, verbose_name='Video URL')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Titel')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('html_content', models.TextField(blank=True, verbose_name='HTML Inhalt')),
                ('target_url', models.URLField(verbose_name='Ziel-URL')),
                ('target_type', models.CharField(choices=[('_self', 'Gleiche Seite'), ('_blank', 'Neues Fenster')], default='_blank', max_length=10, verbose_name='Link öffnen in')),
                ('weight', models.IntegerField(default=1, help_text='Höhere Gewichtung = häufigere Anzeige (1-10)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Gewichtung')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('impressions_count', models.IntegerField(default=0, verbose_name='Impressions')),
                ('clicks_count', models.IntegerField(default=0, verbose_name='Klicks')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Werbeanzeige',
                'verbose_name_plural': 'Werbeanzeigen',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Zone Code')),
                ('name', models.CharField(max_length=200, verbose_name='Zone Name')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('zone_type', models.CharField(choices=[('header', 'Header Banner'), ('footer', 'Footer Banner'), ('sidebar', 'Seitenleiste'), ('in_feed', 'In-Feed'), ('modal', 'Modal/Pop-up'), ('video_preroll', 'Video Pre-Roll'), ('video_overlay', 'Video Overlay'), ('content_card', 'Content Card'), ('notification', 'Benachrichtigung')], max_length=30)),
                ('width', models.IntegerField(verbose_name='Breite (px)')),
                ('height', models.IntegerField(verbose_name='Höhe (px)')),
                ('max_ads', models.IntegerField(default=1, help_text='Wie viele Anzeigen können gleichzeitig in dieser Zone angezeigt werden', verbose_name='Maximale Anzahl Anzeigen')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('app_restriction', models.CharField(blank=True, help_text='Nur in dieser App anzeigen (leer = überall)', max_length=100, verbose_name='App-Beschränkung')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Werbezone',
                'verbose_name_plural': 'Werbezonen',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AdTargeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_desktop', models.BooleanField(default=True, verbose_name='Desktop')),
                ('target_mobile', models.BooleanField(default=True, verbose_name='Mobile')),
                ('target_tablet', models.BooleanField(default=True, verbose_name='Tablet')),
                ('target_logged_in', models.BooleanField(default=True, verbose_name='Eingeloggte Nutzer')),
                ('target_anonymous', models.BooleanField(default=True, verbose_name='Anonyme Nutzer')),
                ('target_apps', models.JSONField(blank=True, default=list, help_text='Liste der Apps, in denen die Anzeige erscheinen soll (leer = alle)', verbose_name='Ziel-Apps')),
                ('exclude_apps', models.JSONField(blank=True, default=list, help_text='Liste der Apps, in denen die Anzeige NICHT erscheinen soll', verbose_name='Ausgeschlossene Apps')),
                ('target_urls', models.TextField(blank=True, help_text='URLs oder URL-Muster (eine pro Zeile)', verbose_name='Ziel-URLs')),
                ('exclude_urls', models.TextField(blank=True, help_text='URLs oder URL-Muster (eine pro Zeile)', verbose_name='Ausgeschlossene URLs')),
                ('advertisement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targeting', to='loomads.advertisement')),
            ],
            options={
                'verbose_name': 'Targeting',
                'verbose_name_plural': 'Targetings',
            },
        ),
        migrations.AddField(
            model_name='advertisement',
            name='zones',
            field=models.ManyToManyField(related_name='advertisements', to='loomads.adzone', verbose_name='Werbezonen'),
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Kampagnenname')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('status', models.CharField(choices=[('draft', 'Entwurf'), ('active', 'Aktiv'), ('paused', 'Pausiert'), ('completed', 'Abgeschlossen')], default='draft', max_length=20)),
                ('start_date', models.DateTimeField(verbose_name='Startdatum')),
                ('end_date', models.DateTimeField(verbose_name='Enddatum')),
                ('daily_impression_limit', models.IntegerField(blank=True, help_text='Maximale Anzahl der Impressions pro Tag (leer = unbegrenzt)', null=True, verbose_name='Tägliches Impression-Limit')),
                ('total_impression_limit', models.IntegerField(blank=True, help_text='Maximale Anzahl der Impressions insgesamt (leer = unbegrenzt)', null=True, verbose_name='Gesamt Impression-Limit')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ad_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Kampagne',
                'verbose_name_plural': 'Kampagnen',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='advertisement',
            name='campaign',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advertisements', to='loomads.campaign'),
        ),
        migrations.CreateModel(
            name='AdSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, 'Montag'), (1, 'Dienstag'), (2, 'Mittwoch'), (3, 'Donnerstag'), (4, 'Freitag'), (5, 'Samstag'), (6, 'Sonntag')], verbose_name='Wochentag')),
                ('start_time', models.TimeField(verbose_name='Startzeit')),
                ('end_time', models.TimeField(verbose_name='Endzeit')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('advertisement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='loomads.advertisement')),
            ],
            options={
                'verbose_name': 'Zeitplan',
                'verbose_name_plural': 'Zeitpläne',
                'ordering': ['weekday', 'start_time'],
                'unique_together': {('advertisement', 'weekday', 'start_time', 'end_time')},
            },
        ),
        migrations.CreateModel(
            name='AdPlacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(default=1, help_text='Höhere Priorität = bevorzugte Platzierung', verbose_name='Priorität')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Startdatum')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Enddatum')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('advertisement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='loomads.advertisement')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='loomads.adzone')),
            ],
            options={
                'verbose_name': 'Anzeigenplatzierung',
                'verbose_name_plural': 'Anzeigenplatzierungen',
                'ordering': ['-priority', 'zone'],
                'unique_together': {('advertisement', 'zone')},
            },
        ),
        migrations.CreateModel(
            name='AdImpression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('page_url', models.URLField(verbose_name='Seiten-URL')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('advertisement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impressions', to='loomads.advertisement')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='loomads.adzone')),
            ],
            options={
                'verbose_name': 'Impression',
                'verbose_name_plural': 'Impressions',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['advertisement', 'timestamp'], name='loomads_adi_adverti_05e285_idx'), models.Index(fields=['zone', 'timestamp'], name='loomads_adi_zone_id_031358_idx')],
            },
        ),
        migrations.CreateModel(
            name='AdClick',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('referrer_url', models.URLField(blank=True, verbose_name='Referrer URL')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('advertisement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clicks', to='loomads.advertisement')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='loomads.adzone')),
            ],
            options={
                'verbose_name': 'Klick',
                'verbose_name_plural': 'Klicks',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['advertisement', 'timestamp'], name='loomads_adc_adverti_3b4c7a_idx'), models.Index(fields=['zone', 'timestamp'], name='loomads_adc_zone_id_fc0950_idx')],
            },
        ),
    ]
