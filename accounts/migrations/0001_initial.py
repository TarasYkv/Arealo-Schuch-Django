# Generated by Django 5.2.1 on 2025-08-25 10:37

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import encrypted_model_fields.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(choices=[('chat', 'Chat'), ('videos', 'Videos'), ('mail', 'Email'), ('shopify_manager', 'Shopify Manager'), ('image_editor', 'Bild Editor'), ('naturmacher', 'Schulungen (Naturmacher)'), ('organization', 'Organisation'), ('todos', 'ToDos'), ('pdf_sucher', 'PDF-Suche'), ('amortization_calculator', 'Wirtschaftlichkeitsrechner'), ('sportplatzApp', 'Sportplatz-Konfigurator'), ('bug_report', 'Bug Report'), ('payments', 'Zahlungen & Abos'), ('core', 'Schuch (Startseite/Kern)')], max_length=50, unique=True, verbose_name='App/Feature')),
                ('title', models.CharField(max_length=200, verbose_name='Titel')),
                ('short_description', models.CharField(max_length=300, verbose_name='Kurzbeschreibung')),
                ('detailed_description', models.TextField(verbose_name='Detaillierte Beschreibung')),
                ('key_features', models.JSONField(default=list, help_text='Liste der wichtigsten Features als JSON Array', verbose_name='Hauptfunktionen')),
                ('subscription_requirements', models.TextField(blank=True, verbose_name='Abo-Anforderungen')),
                ('technical_requirements', models.TextField(blank=True, verbose_name='Technische Anforderungen')),
                ('icon_class', models.CharField(default='bi bi-app', max_length=100, verbose_name='Icon CSS Klasse')),
                ('screenshot_url', models.URLField(blank=True, verbose_name='Screenshot URL')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('development_status', models.CharField(choices=[('development', 'In Entwicklung'), ('beta', 'Beta'), ('stable', 'Stabil'), ('deprecated', 'Veraltet')], default='stable', max_length=50, verbose_name='Entwicklungsstatus')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Aktualisiert am')),
            ],
            options={
                'verbose_name': 'App Information',
                'verbose_name_plural': 'App Informationen',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='FeatureAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(choices=[('chat', 'Chat'), ('videos', 'Videos'), ('mail', 'Email'), ('shopify_manager', 'Shopify Manager'), ('image_editor', 'Bild Editor'), ('naturmacher', 'Schulungen (Naturmacher)'), ('organization', 'Organisation'), ('todos', 'ToDos'), ('pdf_sucher', 'PDF-Suche'), ('amortization_calculator', 'Wirtschaftlichkeitsrechner'), ('sportplatzApp', 'Sportplatz-Konfigurator'), ('bug_report', 'Bug Report'), ('payments', 'Zahlungen & Abos'), ('core', 'Schuch (Startseite/Kern)'), ('video_upload', 'Video Upload'), ('video_sharing', 'Video Sharing'), ('ai_features', 'KI-Features'), ('premium_support', 'Premium Support'), ('advanced_analytics', 'Erweiterte Analytik')], max_length=50, unique=True, verbose_name='App/Feature')),
                ('subscription_required', models.CharField(choices=[('free', 'Kostenlos verfügbar'), ('any_paid', 'Beliebiges bezahltes Abo erforderlich'), ('founder_access', "Founder's Early Access erforderlich"), ('storage_plan', 'Storage-Plan erforderlich'), ('in_development', 'In Entwicklung'), ('blocked', 'Komplett gesperrt')], default='free', max_length=20, verbose_name='Erforderliches Abonnement')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('show_upgrade_prompt', models.BooleanField(default=True, verbose_name='Upgrade-Hinweis anzeigen')),
                ('upgrade_message', models.TextField(blank=True, help_text='Benutzerdefinierte Nachricht für Upgrade-Prompt', verbose_name='Upgrade-Nachricht')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Feature-Zugriff',
                'verbose_name_plural': 'Feature-Zugriffe',
                'ordering': ['app_name'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('use_custom_categories', models.BooleanField(default=False, verbose_name='Benutzerdefinierte Kategorien verwenden')),
                ('enable_ai_keyword_expansion', models.BooleanField(default=False, verbose_name='KI-Keyword-Erweiterung aktivieren')),
                ('openai_api_key', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True, verbose_name='OpenAI API Key')),
                ('anthropic_api_key', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True, verbose_name='Anthropic API Key')),
                ('google_api_key', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True, verbose_name='Google API Key')),
                ('youtube_api_key', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True, verbose_name='YouTube API Key')),
                ('company_info', models.TextField(blank=True, help_text='Beschreibung Ihres Unternehmens, Produkte, Zielgruppe, etc.', verbose_name='Firmeninformationen')),
                ('learning_goals', models.TextField(blank=True, help_text='Ihre Standard-Lernziele für Schulungen', verbose_name='Standard-Lernziele')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='Profilbild')),
                ('is_bug_chat_superuser', models.BooleanField(default=False, help_text='Kann Bug-Chat-Nachrichten empfangen und Super User verwalten', verbose_name='Bug-Chat Super User')),
                ('receive_bug_reports', models.BooleanField(default=False, help_text='Erhält Bug-Meldungen über das Chat-System', verbose_name='Bug-Meldungen empfangen')),
                ('receive_anonymous_reports', models.BooleanField(default=False, help_text='Erhält auch Bug-Meldungen ohne angemeldeten User', verbose_name='Anonyme Meldungen empfangen')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Letzte Aktivität')),
                ('is_online', models.BooleanField(default=False, verbose_name='Online')),
                ('can_make_audio_calls', models.BooleanField(default=True, verbose_name='Darf Audioanrufe tätigen')),
                ('can_make_video_calls', models.BooleanField(default=True, verbose_name='Darf Videoanrufe tätigen')),
                ('can_receive_audio_calls', models.BooleanField(default=True, verbose_name='Darf Audioanrufe empfangen')),
                ('can_receive_video_calls', models.BooleanField(default=True, verbose_name='Darf Videoanrufe empfangen')),
                ('can_manage_app_permissions', models.BooleanField(default=False, help_text='Erlaubt dem Benutzer das App-Freigabe Tab zu sehen und zu verwalten', verbose_name='Darf App-Freigaben verwalten')),
                ('dark_mode', models.BooleanField(default=False, verbose_name='Dunkles Design aktivieren')),
                ('desktop_view', models.BooleanField(default=False, help_text='Zeigt immer die Desktop-Version an, unabhängig vom Gerät', verbose_name='Desktop-Ansicht erzwingen')),
                ('email_verified', models.BooleanField(default=False, verbose_name='E-Mail verifiziert')),
                ('email_verification_token', models.CharField(blank=True, max_length=100, null=True, verbose_name='E-Mail Verifikationstoken')),
                ('email_verification_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Verifikations-E-Mail gesendet am')),
                ('preferred_openai_model', models.CharField(choices=[('gpt-4o', 'GPT-4o (Premium)'), ('gpt-4o-mini', 'GPT-4o Mini (Standard)'), ('gpt-4-turbo', 'GPT-4 Turbo'), ('gpt-3.5-turbo', 'GPT-3.5 Turbo (Günstig)')], default='gpt-4o-mini', max_length=50, verbose_name='Bevorzugtes OpenAI Modell')),
                ('preferred_anthropic_model', models.CharField(choices=[('claude-3-5-sonnet-20241022', 'Claude 3.5 Sonnet (Premium)'), ('claude-3-5-haiku-20241022', 'Claude 3.5 Haiku (Schnell)'), ('claude-3-opus-20240229', 'Claude 3 Opus (Top-Tier)'), ('claude-3-sonnet-20240229', 'Claude 3 Sonnet (Standard)'), ('claude-3-haiku-20240307', 'Claude 3 Haiku (Günstig)')], default='claude-3-5-sonnet-20241022', max_length=50, verbose_name='Bevorzugtes Anthropic Modell')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AmpelCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Kategorie-Name')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ampel_categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ampel-Kategorie',
                'verbose_name_plural': 'Ampel-Kategorien',
                'ordering': ['name'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='AppPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(choices=[('schulungen', 'Schulungen'), ('shopify', 'Shopify'), ('bilder', 'Bilder'), ('todos', 'ToDos'), ('chat', 'Chat'), ('organisation', 'Organisation'), ('editor', 'Editor'), ('videos', 'Videos'), ('mail', 'Email'), ('email_templates', 'Email-Vorlagen'), ('somi_plan', 'SoMi-Plan'), ('makeads', 'AdsMake'), ('streamrec', 'StreamRec'), ('schuch', 'Schuch'), ('schuch_dashboard', 'Schuch Dashboard'), ('wirtschaftlichkeitsrechner', 'Wirtschaftlichkeitsrechner'), ('sportplatz_konfigurator', 'Sportplatz-Konfigurator'), ('pdf_suche', 'PDF-Suche'), ('ki_zusammenfassung', 'KI-Zusammenfassung'), ('shopify_produkte', 'Shopify - Produkte'), ('shopify_blogs', 'Shopify - Blogs'), ('shopify_seo_dashboard', 'Shopify - SEO Dashboard'), ('shopify_verkaufszahlen', 'Shopify - Verkaufszahlen'), ('shopify_seo_optimierung', 'Shopify - SEO-Optimierung'), ('shopify_alt_text', 'Shopify - Alt-Text Manager'), ('organisation_notizen', 'Organisation - Notizen'), ('organisation_termine', 'Organisation - Termine'), ('organisation_ideenboards', 'Organisation - Ideenboards'), ('organisation_terminanfragen', 'Organisation - Ausstehende Terminanfragen')], max_length=50, unique=True, verbose_name='App/Funktion')),
                ('access_level', models.CharField(choices=[('blocked', 'Gesperrt'), ('anonymous', 'Nicht angemeldete Besucher'), ('authenticated', 'Angemeldete Nutzer'), ('selected', 'Ausgewählte Nutzer'), ('in_development', 'In Entwicklung')], default='blocked', max_length=20, verbose_name='Zugriffsebene')),
                ('hide_in_frontend', models.BooleanField(default=False, help_text='App wird in Navigation und UI nicht angezeigt, auch wenn zugänglich', verbose_name='Im Frontend ausblenden')),
                ('superuser_bypass', models.BooleanField(default=True, help_text='Superuser haben unabhängig von den Einstellungen vollen Zugriff', verbose_name='Superuser können immer zugreifen')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('selected_users', models.ManyToManyField(blank=True, help_text="Nur relevant wenn Zugriffsebene 'Ausgewählte Nutzer' ist", related_name='app_permissions', to=settings.AUTH_USER_MODEL, verbose_name='Ausgewählte Nutzer')),
            ],
            options={
                'verbose_name': 'App-Berechtigung',
                'verbose_name_plural': 'App-Berechtigungen',
                'ordering': ['app_name'],
            },
        ),
        migrations.CreateModel(
            name='UserLoginHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField(auto_now_add=True, verbose_name='Login Zeit')),
                ('logout_time', models.DateTimeField(blank=True, null=True, verbose_name='Logout Zeit')),
                ('session_duration', models.DurationField(blank=True, null=True, verbose_name='Session Dauer')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-Adresse')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('is_active_session', models.BooleanField(default=True, verbose_name='Aktive Session')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Benutzer Login Historie',
                'verbose_name_plural': 'Benutzer Login Historien',
                'ordering': ['-login_time'],
            },
        ),
        migrations.CreateModel(
            name='ZohoAPISettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', encrypted_model_fields.fields.EncryptedCharField(blank=True, verbose_name='Zoho Client ID')),
                ('client_secret', encrypted_model_fields.fields.EncryptedCharField(blank=True, verbose_name='Zoho Client Secret')),
                ('redirect_uri', models.URLField(blank=True, verbose_name='Redirect URI')),
                ('region', models.CharField(choices=[('US', 'US'), ('EU', 'EU'), ('IN', 'India'), ('AU', 'Australia')], default='EU', max_length=5, verbose_name='Zoho Region')),
                ('access_token', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('refresh_token', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_configured', models.BooleanField(default=False, verbose_name='Konfiguriert')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('last_test_success', models.DateTimeField(blank=True, null=True, verbose_name='Letzter erfolgreicher Test')),
                ('last_error', models.TextField(blank=True, verbose_name='Letzter Fehler')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='zoho_mail_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Zoho Mail API Einstellung',
                'verbose_name_plural': 'Zoho Mail API Einstellungen',
            },
        ),
        migrations.CreateModel(
            name='AppUsageTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(max_length=50, verbose_name='App/Feature Name')),
                ('activity_type', models.CharField(choices=[('app_usage', 'App-Nutzung'), ('video_call', 'Videoanruf'), ('audio_call', 'Audioanruf'), ('screen_share', 'Bildschirmfreigabe'), ('file_upload', 'Datei-Upload'), ('chat_message', 'Chat-Nachricht')], default='app_usage', max_length=20, verbose_name='Aktivitätstyp')),
                ('url_path', models.CharField(max_length=255, verbose_name='URL Pfad')),
                ('session_start', models.DateTimeField(auto_now_add=True, verbose_name='Session Start')),
                ('session_end', models.DateTimeField(blank=True, null=True, verbose_name='Session Ende')),
                ('duration_seconds', models.IntegerField(default=0, verbose_name='Dauer in Sekunden')),
                ('call_participants', models.JSONField(blank=True, default=list, verbose_name='Anruf-Teilnehmer')),
                ('call_quality_rating', models.IntegerField(blank=True, null=True, verbose_name='Anruf-Qualitätsbewertung (1-5)')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-Adresse')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('referrer', models.URLField(blank=True, verbose_name='Referrer URL')),
                ('extra_data', models.JSONField(blank=True, default=dict, verbose_name='Zusätzliche Daten')),
                ('is_active_session', models.BooleanField(default=True, verbose_name='Aktive Session')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app_usage_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'App-Nutzungs-Tracking',
                'verbose_name_plural': 'App-Nutzungs-Trackings',
                'ordering': ['-session_start'],
                'indexes': [models.Index(fields=['user', 'app_name', 'session_start'], name='accounts_ap_user_id_fc532d_idx'), models.Index(fields=['session_start'], name='accounts_ap_session_2603f9_idx'), models.Index(fields=['is_active_session'], name='accounts_ap_is_acti_da2335_idx')],
            },
        ),
        migrations.CreateModel(
            name='CategoryKeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=200, verbose_name='Suchbegriff')),
                ('weight', models.PositiveIntegerField(default=1, verbose_name='Gewichtung')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keywords', to='accounts.ampelcategory')),
            ],
            options={
                'verbose_name': 'Kategorie-Suchbegriff',
                'verbose_name_plural': 'Kategorie-Suchbegriffe',
                'ordering': ['-weight', 'keyword'],
                'unique_together': {('category', 'keyword')},
            },
        ),
        migrations.CreateModel(
            name='CustomPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_name', models.CharField(help_text='Technischer Name für die URL', max_length=50, verbose_name='Seiten-Name')),
                ('display_name', models.CharField(max_length=100, verbose_name='Anzeigename')),
                ('page_type', models.CharField(choices=[('landing', 'Landing Page'), ('about', 'Über uns'), ('services', 'Services/Leistungen'), ('contact', 'Kontakt'), ('blog', 'Blog/News'), ('gallery', 'Galerie'), ('custom', 'Benutzerdefiniert')], max_length=20, verbose_name='Seitentyp')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_pages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Benutzerdefinierte Seite',
                'verbose_name_plural': 'Benutzerdefinierte Seiten',
                'ordering': ['display_name'],
                'unique_together': {('user', 'page_name')},
            },
        ),
        migrations.CreateModel(
            name='EditableContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.CharField(max_length=50, verbose_name='Seite')),
                ('content_type', models.CharField(choices=[('text', 'Text'), ('image', 'Bild'), ('hero_title', 'Hero Titel'), ('hero_subtitle', 'Hero Untertitel'), ('section_title', 'Bereich Titel'), ('section_text', 'Bereich Text'), ('button_text', 'Button Text'), ('testimonial', 'Kundenstimme'), ('html_block', 'HTML Block'), ('ai_generated', 'KI-generiert')], max_length=50, verbose_name='Inhaltstyp')),
                ('content_key', models.CharField(help_text='Eindeutige Bezeichnung für diesen Inhalt', max_length=100, verbose_name='Inhalt Schlüssel')),
                ('text_content', models.TextField(blank=True, verbose_name='Text Inhalt')),
                ('html_content', models.TextField(blank=True, verbose_name='HTML Inhalt')),
                ('css_content', models.TextField(blank=True, verbose_name='CSS Styles')),
                ('ai_prompt', models.TextField(blank=True, help_text='Beschreibung für KI-generierte Inhalte', verbose_name='KI Prompt')),
                ('image_content', models.ImageField(blank=True, null=True, upload_to='editable_content/', verbose_name='Bild Inhalt')),
                ('image_alt_text', models.CharField(blank=True, max_length=255, verbose_name='Bild Alt-Text')),
                ('link_url', models.URLField(blank=True, verbose_name='Link URL')),
                ('section', models.CharField(blank=True, help_text='Kategorisierung des Inhalts (z.B. hero, features, pricing)', max_length=50, verbose_name='Bereich')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Sortierreihenfolge')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editable_contents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bearbeitbarer Inhalt',
                'verbose_name_plural': 'Bearbeitbare Inhalte',
                'ordering': ['page', 'sort_order', 'created_at'],
                'unique_together': {('user', 'page', 'content_key')},
            },
        ),
        migrations.CreateModel(
            name='SEOSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.CharField(max_length=50, verbose_name='Seite')),
                ('seo_title', models.CharField(blank=True, help_text='Empfohlen: 50-60 Zeichen', max_length=60, verbose_name='SEO Titel')),
                ('seo_description', models.TextField(blank=True, help_text='Empfohlen: 150-160 Zeichen', max_length=160, verbose_name='SEO Beschreibung')),
                ('keywords', models.TextField(blank=True, help_text='Durch Kommas getrennt', verbose_name='Keywords')),
                ('canonical_url', models.URLField(blank=True, verbose_name='Canonical URL')),
                ('noindex', models.BooleanField(default=False, help_text='Seite von Suchmaschinen ausschließen', verbose_name='Noindex')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seo_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SEO Einstellung',
                'verbose_name_plural': 'SEO Einstellungen',
                'unique_together': {('user', 'page')},
            },
        ),
        migrations.CreateModel(
            name='UserAppPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(choices=[('schulungen', 'Schulungen'), ('shopify', 'Shopify'), ('bilder', 'Bilder'), ('todos', 'ToDos'), ('chat', 'Chat'), ('organisation', 'Organisation'), ('editor', 'Editor'), ('videos', 'Videos'), ('mail', 'Email'), ('email_templates', 'Email-Vorlagen'), ('somi_plan', 'SoMi-Plan'), ('makeads', 'AdsMake'), ('streamrec', 'StreamRec'), ('schuch', 'Schuch'), ('schuch_dashboard', 'Schuch Dashboard'), ('wirtschaftlichkeitsrechner', 'Wirtschaftlichkeitsrechner'), ('sportplatz_konfigurator', 'Sportplatz-Konfigurator'), ('pdf_suche', 'PDF-Suche'), ('ki_zusammenfassung', 'KI-Zusammenfassung'), ('shopify_produkte', 'Shopify - Produkte'), ('shopify_blogs', 'Shopify - Blogs'), ('shopify_seo_dashboard', 'Shopify - SEO Dashboard'), ('shopify_verkaufszahlen', 'Shopify - Verkaufszahlen'), ('shopify_seo_optimierung', 'Shopify - SEO-Optimierung'), ('shopify_alt_text', 'Shopify - Alt-Text Manager'), ('organisation_notizen', 'Organisation - Notizen'), ('organisation_termine', 'Organisation - Termine'), ('organisation_ideenboards', 'Organisation - Ideenboards'), ('organisation_terminanfragen', 'Organisation - Ausstehende Terminanfragen')], max_length=50, verbose_name='App/Funktion')),
                ('override_type', models.CharField(choices=[('allow', 'Explizit erlauben'), ('deny', 'Explizit verweigern')], max_length=10, verbose_name='Überschreibung')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_user_permissions', to=settings.AUTH_USER_MODEL, verbose_name='Erstellt von')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='individual_app_permissions', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Individuelle App-Berechtigung',
                'verbose_name_plural': 'Individuelle App-Berechtigungen',
                'ordering': ['user__username', 'app_name'],
                'unique_together': {('user', 'app_name')},
            },
        ),
    ]
