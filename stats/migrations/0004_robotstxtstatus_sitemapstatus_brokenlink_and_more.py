# Generated by Django 5.2.1 on 2025-09-29 11:05

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('stats', '0003_errorlog_app_name_errorlog_browser_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='RobotsTxtStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=200, unique=True)),
                ('is_accessible', models.BooleanField(default=True)),
                ('content', models.TextField(blank=True)),
                ('last_checked', models.DateTimeField(default=django.utils.timezone.now)),
                ('violations', models.JSONField(blank=True, default=list)),
                ('disallowed_paths', models.JSONField(blank=True, default=list)),
                ('sitemap_references', models.JSONField(blank=True, default=list)),
                ('crawl_delay', models.IntegerField(blank=True, null=True)),
                ('user_agents', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-last_checked'],
            },
        ),
        migrations.CreateModel(
            name='SitemapStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sitemap_url', models.URLField(max_length=500)),
                ('is_accessible', models.BooleanField(default=True)),
                ('total_urls', models.IntegerField(default=0)),
                ('indexed_urls', models.IntegerField(default=0)),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
                ('last_checked', models.DateTimeField(default=django.utils.timezone.now)),
                ('errors', models.JSONField(blank=True, default=list)),
                ('warnings', models.JSONField(blank=True, default=list)),
            ],
            options={
                'ordering': ['-last_checked'],
            },
        ),
        migrations.CreateModel(
            name='BrokenLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_url', models.URLField(help_text='Seite mit dem kaputten Link', max_length=500)),
                ('target_url', models.URLField(help_text='Ziel-URL die nicht funktioniert', max_length=500)),
                ('anchor_text', models.CharField(blank=True, max_length=200)),
                ('status_code', models.IntegerField()),
                ('first_detected', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_checked', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_fixed', models.BooleanField(default=False)),
                ('link_type', models.CharField(choices=[('internal', 'Internal'), ('external', 'External'), ('image', 'Image'), ('script', 'Script'), ('stylesheet', 'Stylesheet')], default='internal', max_length=20)),
            ],
            options={
                'ordering': ['-last_checked'],
                'unique_together': {('source_url', 'target_url')},
            },
        ),
        migrations.CreateModel(
            name='CoreWebVitals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=500)),
                ('lcp', models.FloatField(help_text='Largest Contentful Paint in seconds')),
                ('lcp_rating', models.CharField(blank=True, choices=[('good', 'Good (<2.5s)'), ('needs_improvement', 'Needs Improvement (2.5-4s)'), ('poor', 'Poor (>4s)')], max_length=20)),
                ('fid', models.FloatField(blank=True, help_text='First Input Delay in milliseconds', null=True)),
                ('fid_rating', models.CharField(blank=True, choices=[('good', 'Good (<100ms)'), ('needs_improvement', 'Needs Improvement (100-300ms)'), ('poor', 'Poor (>300ms)')], max_length=20)),
                ('cls', models.FloatField(help_text='Cumulative Layout Shift score')),
                ('cls_rating', models.CharField(blank=True, choices=[('good', 'Good (<0.1)'), ('needs_improvement', 'Needs Improvement (0.1-0.25)'), ('poor', 'Poor (>0.25)')], max_length=20)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('device_type', models.CharField(choices=[('mobile', 'Mobile'), ('desktop', 'Desktop')], default='desktop', max_length=20)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['url', 'timestamp'], name='stats_corew_url_14d62d_idx')],
            },
        ),
        migrations.CreateModel(
            name='CrawlError',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=500)),
                ('error_type', models.CharField(choices=[('404', '404 Not Found'), ('403', '403 Forbidden'), ('500', '500 Server Error'), ('redirect_loop', 'Redirect Loop'), ('timeout', 'Timeout'), ('dns', 'DNS Error'), ('ssl', 'SSL Certificate Error')], max_length=20)),
                ('first_detected', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_checked', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_resolved', models.BooleanField(default=False)),
                ('response_code', models.IntegerField(blank=True, null=True)),
                ('crawler', models.CharField(blank=True, max_length=50)),
                ('source_url', models.URLField(blank=True, help_text='URL die auf diese Seite verlinkt', max_length=500)),
            ],
            options={
                'ordering': ['-last_checked'],
                'unique_together': {('url', 'error_type')},
            },
        ),
    ]
