# Generated by Django 5.2.1 on 2025-09-26 19:45

import django.core.validators
import django.db.models.deletion
import fileshare.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TransferStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_transfers', models.IntegerField(default=0)),
                ('total_files', models.IntegerField(default=0)),
                ('total_size', models.BigIntegerField(default=0)),
                ('total_downloads', models.IntegerField(default=0)),
                ('unique_senders', models.IntegerField(default=0)),
                ('unique_recipients', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Transfer Statistics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sender_email', models.EmailField(blank=True, help_text='Email of sender if not registered user', max_length=254)),
                ('title', models.CharField(blank=True, help_text='Optional title for the transfer', max_length=255)),
                ('message', models.TextField(blank=True, help_text='Optional message to recipients')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(help_text='When this transfer expires')),
                ('download_limit', models.IntegerField(default=0, help_text='Maximum number of downloads allowed. 0 = unlimited', validators=[django.core.validators.MinValueValidator(0)])),
                ('total_downloads', models.IntegerField(default=0)),
                ('password_hash', models.CharField(blank=True, help_text='Optional password protection', max_length=255)),
                ('total_size', models.BigIntegerField(default=0, help_text='Total size of all files in bytes')),
                ('is_active', models.BooleanField(default=True)),
                ('transfer_type', models.CharField(choices=[('email', 'Email Transfer'), ('link', 'Link Transfer')], default='link', max_length=10)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_transfers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransferFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('original_filename', models.CharField(max_length=255)),
                ('file', models.FileField(max_length=500, upload_to=fileshare.models.upload_to_transfer)),
                ('file_size', models.BigIntegerField(default=0)),
                ('file_type', models.CharField(blank=True, max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('scan_status', models.CharField(choices=[('pending', 'Pending'), ('clean', 'Clean'), ('infected', 'Infected'), ('error', 'Scan Error')], default='pending', max_length=10)),
                ('scan_message', models.TextField(blank=True)),
                ('transfer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='fileshare.transfer')),
            ],
            options={
                'ordering': ['original_filename'],
            },
        ),
        migrations.CreateModel(
            name='TransferRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('notified_at', models.DateTimeField(blank=True, null=True)),
                ('first_download_at', models.DateTimeField(blank=True, null=True)),
                ('download_count', models.IntegerField(default=0)),
                ('transfer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='fileshare.transfer')),
            ],
        ),
        migrations.CreateModel(
            name='DownloadLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('bytes_downloaded', models.BigIntegerField(default=0)),
                ('download_completed', models.BooleanField(default=False)),
                ('transfer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='download_logs', to='fileshare.transfer')),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fileshare.transferfile')),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fileshare.transferrecipient')),
            ],
            options={
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.AddIndex(
            model_name='transfer',
            index=models.Index(fields=['-created_at'], name='fileshare_t_created_3318bb_idx'),
        ),
        migrations.AddIndex(
            model_name='transfer',
            index=models.Index(fields=['expires_at'], name='fileshare_t_expires_41937a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='transferrecipient',
            unique_together={('transfer', 'email')},
        ),
        migrations.AddIndex(
            model_name='downloadlog',
            index=models.Index(fields=['-downloaded_at'], name='fileshare_d_downloa_c8cbce_idx'),
        ),
    ]
