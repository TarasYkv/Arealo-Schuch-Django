# Generated by Django 5.2.1 on 2025-07-15 09:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shopify_manager', '0022_add_google_ads_integration'),
    ]

    operations = [
        migrations.CreateModel(
            name='ShopifyCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopify_id', models.CharField(help_text='Shopify Collection ID', max_length=50)),
                ('title', models.CharField(help_text='Kategorie-Titel', max_length=255)),
                ('handle', models.CharField(help_text='URL Handle', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Kategorie-Beschreibung')),
                ('seo_title', models.CharField(blank=True, help_text='SEO Titel (max. 70 Zeichen)', max_length=70)),
                ('seo_description', models.TextField(blank=True, help_text='SEO Beschreibung (max. 160 Zeichen)', max_length=160)),
                ('image_url', models.URLField(blank=True, help_text='Kategorie-Bild URL')),
                ('image_alt', models.CharField(blank=True, help_text='Alt-Text für Kategorie-Bild', max_length=255)),
                ('sort_order', models.CharField(blank=True, help_text='Sortierung der Produkte', max_length=50)),
                ('published', models.BooleanField(default=True, help_text='Ist die Kategorie veröffentlicht?')),
                ('last_synced_at', models.DateTimeField(blank=True, null=True)),
                ('needs_sync', models.BooleanField(default=False, help_text='Wurde lokal geändert und muss synchronisiert werden')),
                ('sync_error', models.TextField(blank=True, help_text='Letzter Sync-Fehler')),
                ('shopify_created_at', models.DateTimeField(blank=True, null=True)),
                ('shopify_updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('raw_shopify_data', models.JSONField(blank=True, default=dict, help_text='Komplette Shopify Collection-Daten')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='shopify_manager.shopifystore')),
            ],
            options={
                'verbose_name': 'Shopify Kategorie',
                'verbose_name_plural': 'Shopify Kategorien',
                'ordering': ['-updated_at'],
                'unique_together': {('shopify_id', 'store')},
            },
        ),
        migrations.CreateModel(
            name='CollectionSEOOptimization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(help_text='Kommagetrennte Keywords für SEO-Optimierung')),
                ('ai_model', models.CharField(choices=[('openai-gpt4', 'OpenAI GPT-4'), ('openai-gpt4o', 'OpenAI GPT-4o'), ('openai-gpt4o-mini', 'OpenAI GPT-4o Mini'), ('openai-gpt35', 'OpenAI GPT-3.5 Turbo'), ('claude-3.5-sonnet', 'Claude 3.5 Sonnet'), ('claude-3.5-haiku', 'Claude 3.5 Haiku'), ('claude-3-opus', 'Claude 3 Opus'), ('gemini-1.5-pro', 'Google Gemini 1.5 Pro'), ('gemini-1.5-flash', 'Google Gemini 1.5 Flash')], default='openai-gpt4', max_length=50)),
                ('original_title', models.CharField(blank=True, max_length=255)),
                ('original_description', models.TextField(blank=True)),
                ('original_seo_title', models.CharField(blank=True, max_length=70)),
                ('original_seo_description', models.CharField(blank=True, max_length=160)),
                ('generated_seo_title', models.CharField(blank=True, max_length=70)),
                ('generated_seo_description', models.CharField(blank=True, max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_applied', models.BooleanField(default=False, help_text='Wurden die generierten SEO-Daten angewendet?')),
                ('ai_prompt_used', models.TextField(blank=True, help_text='Der verwendete AI-Prompt')),
                ('ai_response_raw', models.TextField(blank=True, help_text='Rohe AI-Antwort für Debug')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seo_optimizations', to='shopify_manager.shopifycollection')),
            ],
            options={
                'verbose_name': 'Kategorie SEO-Optimierung',
                'verbose_name_plural': 'Kategorie SEO-Optimierungen',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShopifyProductCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopify_product_id', models.CharField(help_text='Shopify Product ID', max_length=50)),
                ('shopify_collection_id', models.CharField(help_text='Shopify Collection ID', max_length=50)),
                ('position', models.PositiveIntegerField(default=1, help_text='Position in der Kategorie')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shopify_manager.shopifycollection')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='shopify_manager.shopifyproduct')),
            ],
            options={
                'verbose_name': 'Produkt-Kategorie-Zuordnung',
                'verbose_name_plural': 'Produkt-Kategorie-Zuordnungen',
                'ordering': ['position'],
                'unique_together': {('product', 'collection')},
            },
        ),
    ]
