# Generated by Django 5.2.1 on 2025-08-25 10:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ShippingProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name des Versandprofils', max_length=200)),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0.0, help_text='Tatsächliche Versandkosten', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Versandprofil',
                'verbose_name_plural': 'Versandprofile',
            },
        ),
        migrations.CreateModel(
            name='ShopifyBlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopify_id', models.CharField(help_text='Shopify Blog ID', max_length=50)),
                ('title', models.CharField(help_text='Blog-Titel', max_length=255)),
                ('handle', models.CharField(help_text='URL Handle', max_length=255)),
                ('shopify_created_at', models.DateTimeField(blank=True, null=True)),
                ('shopify_updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('raw_shopify_data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Shopify Blog',
                'verbose_name_plural': 'Shopify Blogs',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ShopifyCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopify_id', models.CharField(help_text='Shopify Collection ID', max_length=50)),
                ('collection_type', models.CharField(choices=[('custom', 'Custom Collection'), ('smart', 'Smart Collection')], default='custom', help_text='Typ der Collection (Custom oder Smart)', max_length=20)),
                ('title', models.CharField(help_text='Kategorie-Titel', max_length=255)),
                ('handle', models.CharField(help_text='URL Handle', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Kategorie-Beschreibung')),
                ('seo_title', models.CharField(blank=True, help_text='SEO Titel (max. 70 Zeichen)', max_length=70)),
                ('seo_description', models.TextField(blank=True, help_text='SEO Beschreibung (max. 160 Zeichen)', max_length=160)),
                ('image_url', models.URLField(blank=True, help_text='Kategorie-Bild URL')),
                ('image_alt', models.CharField(blank=True, help_text='Alt-Text für Kategorie-Bild', max_length=255)),
                ('sort_order', models.CharField(blank=True, help_text='Sortierung der Produkte', max_length=50)),
                ('published', models.BooleanField(default=True, help_text='Ist die Kategorie veröffentlicht?')),
                ('last_synced_at', models.DateTimeField(blank=True, null=True)),
                ('needs_sync', models.BooleanField(default=False, help_text='Wurde lokal geändert und muss synchronisiert werden')),
                ('sync_error', models.TextField(blank=True, help_text='Letzter Sync-Fehler')),
                ('shopify_created_at', models.DateTimeField(blank=True, null=True)),
                ('shopify_updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('raw_shopify_data', models.JSONField(blank=True, default=dict, help_text='Komplette Shopify Collection-Daten')),
            ],
            options={
                'verbose_name': 'Shopify Kategorie',
                'verbose_name_plural': 'Shopify Kategorien',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ShopifyProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopify_id', models.CharField(help_text='Shopify Product ID', max_length=50)),
                ('title', models.CharField(help_text='Produkttitel', max_length=255)),
                ('handle', models.CharField(help_text='URL Handle', max_length=255)),
                ('body_html', models.TextField(blank=True, help_text='Produktbeschreibung (HTML)')),
                ('vendor', models.CharField(blank=True, help_text='Hersteller', max_length=255)),
                ('product_type', models.CharField(blank=True, help_text='Produkttyp', max_length=255)),
                ('status', models.CharField(choices=[('active', 'Aktiv'), ('archived', 'Archiviert'), ('draft', 'Entwurf')], default='active', max_length=20)),
                ('seo_title', models.CharField(blank=True, help_text='SEO Titel (max. 70 Zeichen)', max_length=70)),
                ('seo_description', models.TextField(blank=True, help_text='SEO Beschreibung (max. 160 Zeichen)', max_length=160)),
                ('featured_image_url', models.URLField(blank=True, help_text='Haupt-Produktbild URL')),
                ('featured_image_alt', models.CharField(blank=True, help_text='Alt-Text für Hauptbild', max_length=255)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('compare_at_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tags', models.TextField(blank=True, help_text='Tags (kommagetrennt)')),
                ('last_synced_at', models.DateTimeField(blank=True, null=True)),
                ('needs_sync', models.BooleanField(default=False, help_text='Wurde lokal geändert und muss synchronisiert werden')),
                ('sync_error', models.TextField(blank=True, help_text='Letzter Sync-Fehler')),
                ('shopify_created_at', models.DateTimeField(blank=True, null=True)),
                ('shopify_updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('raw_shopify_data', models.JSONField(blank=True, default=dict, help_text='Komplette Shopify Produktdaten')),
            ],
            options={
                'verbose_name': 'Shopify Produkt',
                'verbose_name_plural': 'Shopify Produkte',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ShopifyBlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopify_id', models.CharField(help_text='Shopify Article ID', max_length=50)),
                ('title', models.CharField(help_text='Beitrag-Titel', max_length=255)),
                ('handle', models.CharField(help_text='URL Handle', max_length=255)),
                ('content', models.TextField(help_text='Beitrag-Inhalt (HTML)')),
                ('summary', models.TextField(blank=True, help_text='Zusammenfassung')),
                ('author', models.CharField(blank=True, help_text='Autor', max_length=255)),
                ('status', models.CharField(choices=[('published', 'Veröffentlicht'), ('draft', 'Entwurf'), ('hidden', 'Versteckt')], default='draft', max_length=20)),
                ('seo_title', models.CharField(blank=True, help_text='SEO Titel (max. 70 Zeichen)', max_length=70)),
                ('seo_description', models.TextField(blank=True, help_text='SEO Beschreibung (max. 160 Zeichen)', max_length=160)),
                ('featured_image_url', models.URLField(blank=True, help_text='Haupt-Bild URL')),
                ('featured_image_alt', models.CharField(blank=True, help_text='Alt-Text für Hauptbild', max_length=255)),
                ('tags', models.TextField(blank=True, help_text='Tags (kommagetrennt)')),
                ('published_at', models.DateTimeField(blank=True, help_text='Veröffentlichungsdatum', null=True)),
                ('last_synced_at', models.DateTimeField(blank=True, null=True)),
                ('needs_sync', models.BooleanField(default=False, help_text='Wurde lokal geändert und muss synchronisiert werden')),
                ('sync_error', models.TextField(blank=True, help_text='Letzter Sync-Fehler')),
                ('shopify_created_at', models.DateTimeField(blank=True, null=True)),
                ('shopify_updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('raw_shopify_data', models.JSONField(blank=True, default=dict)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='shopify_manager.shopifyblog')),
            ],
            options={
                'verbose_name': 'Shopify Blog Post',
                'verbose_name_plural': 'Shopify Blog Posts',
                'ordering': ['-published_at', '-updated_at'],
                'unique_together': {('shopify_id', 'blog')},
            },
        ),
        migrations.CreateModel(
            name='BlogPostSEOOptimization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(help_text='Kommagetrennte Keywords für SEO-Optimierung')),
                ('ai_model', models.CharField(choices=[('openai-gpt4', 'OpenAI GPT-4'), ('openai-gpt35', 'OpenAI GPT-3.5 Turbo'), ('claude-3-sonnet', 'Claude 3 Sonnet'), ('claude-3-haiku', 'Claude 3 Haiku'), ('gemini-pro', 'Google Gemini Pro')], default='openai-gpt4', max_length=50)),
                ('original_title', models.CharField(blank=True, max_length=255)),
                ('original_content', models.TextField(blank=True)),
                ('original_summary', models.TextField(blank=True)),
                ('original_seo_title', models.CharField(blank=True, max_length=70)),
                ('original_seo_description', models.CharField(blank=True, max_length=160)),
                ('generated_seo_title', models.CharField(blank=True, max_length=70)),
                ('generated_seo_description', models.CharField(blank=True, max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_applied', models.BooleanField(default=False, help_text='Wurden die generierten SEO-Daten angewendet?')),
                ('ai_prompt_used', models.TextField(blank=True, help_text='Der verwendete AI-Prompt')),
                ('ai_response_raw', models.TextField(blank=True, help_text='Rohe AI-Antwort für Debug')),
                ('blog_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seo_optimizations', to='shopify_manager.shopifyblogpost')),
            ],
            options={
                'verbose_name': 'Blog-Post SEO-Optimierung',
                'verbose_name_plural': 'Blog-Post SEO-Optimierungen',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CollectionSEOOptimization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(help_text='Kommagetrennte Keywords für SEO-Optimierung')),
                ('ai_model', models.CharField(choices=[('openai-gpt4', 'OpenAI GPT-4'), ('openai-gpt4o', 'OpenAI GPT-4o'), ('openai-gpt4o-mini', 'OpenAI GPT-4o Mini'), ('openai-gpt35', 'OpenAI GPT-3.5 Turbo'), ('claude-3.5-sonnet', 'Claude 3.5 Sonnet'), ('claude-3.5-haiku', 'Claude 3.5 Haiku'), ('claude-3-opus', 'Claude 3 Opus'), ('gemini-1.5-pro', 'Google Gemini 1.5 Pro'), ('gemini-1.5-flash', 'Google Gemini 1.5 Flash')], default='openai-gpt4', max_length=50)),
                ('original_title', models.CharField(blank=True, max_length=255)),
                ('original_description', models.TextField(blank=True)),
                ('original_seo_title', models.CharField(blank=True, max_length=70)),
                ('original_seo_description', models.CharField(blank=True, max_length=160)),
                ('generated_seo_title', models.CharField(blank=True, max_length=70)),
                ('generated_seo_description', models.CharField(blank=True, max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_applied', models.BooleanField(default=False, help_text='Wurden die generierten SEO-Daten angewendet?')),
                ('ai_prompt_used', models.TextField(blank=True, help_text='Der verwendete AI-Prompt')),
                ('ai_response_raw', models.TextField(blank=True, help_text='Rohe AI-Antwort für Debug')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seo_optimizations', to='shopify_manager.shopifycollection')),
            ],
            options={
                'verbose_name': 'Kategorie SEO-Optimierung',
                'verbose_name_plural': 'Kategorie SEO-Optimierungen',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductShippingProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('shipping_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shopify_manager.shippingprofile')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_profile', to='shopify_manager.shopifyproduct')),
            ],
            options={
                'verbose_name': 'Produkt-Versandprofil',
                'verbose_name_plural': 'Produkt-Versandprofile',
            },
        ),
        migrations.CreateModel(
            name='ProductSEOOptimization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(help_text='Kommagetrennte Keywords für SEO-Optimierung')),
                ('ai_model', models.CharField(choices=[('openai-gpt4', 'OpenAI GPT-4'), ('openai-gpt35', 'OpenAI GPT-3.5 Turbo'), ('claude-3-sonnet', 'Claude 3 Sonnet'), ('claude-3-haiku', 'Claude 3 Haiku'), ('gemini-pro', 'Google Gemini Pro')], default='openai-gpt4', max_length=50)),
                ('original_title', models.CharField(blank=True, max_length=255)),
                ('original_description', models.TextField(blank=True)),
                ('original_seo_title', models.CharField(blank=True, max_length=70)),
                ('original_seo_description', models.CharField(blank=True, max_length=160)),
                ('generated_seo_title', models.CharField(blank=True, max_length=70)),
                ('generated_seo_description', models.CharField(blank=True, max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_applied', models.BooleanField(default=False, help_text='Wurden die generierten SEO-Daten angewendet?')),
                ('ai_prompt_used', models.TextField(blank=True, help_text='Der verwendete AI-Prompt')),
                ('ai_response_raw', models.TextField(blank=True, help_text='Rohe AI-Antwort für Debug')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seo_optimizations', to='shopify_manager.shopifyproduct')),
            ],
            options={
                'verbose_name': 'SEO-Optimierung',
                'verbose_name_plural': 'SEO-Optimierungen',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShopifyProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopify_image_id', models.CharField(help_text='Shopify Image ID', max_length=50)),
                ('image_url', models.URLField(help_text='Bild URL')),
                ('alt_text', models.CharField(blank=True, help_text='Alt-Text', max_length=255, null=True)),
                ('position', models.PositiveIntegerField(default=1, help_text='Reihenfolge der Bilder')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shopify_manager.shopifyproduct')),
            ],
            options={
                'verbose_name': 'Produktbild',
                'verbose_name_plural': 'Produktbilder',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='ShopifyStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name des Shops', max_length=200)),
                ('shop_domain', models.CharField(help_text='mystore.myshopify.com', max_length=200)),
                ('access_token', models.CharField(help_text='Shopify Access Token', max_length=255)),
                ('api_key', models.CharField(blank=True, help_text='Shopify API Key', max_length=255)),
                ('api_secret', models.CharField(blank=True, help_text='Shopify API Secret', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optionale Beschreibung')),
                ('custom_domain', models.CharField(blank=True, help_text='Custom Domain (z.B. naturmacher.de)', max_length=200)),
                ('paypal_account_type', models.CharField(choices=[('standard', 'Standard Account'), ('business', 'Business Account'), ('handler', 'Handler Account')], default='standard', help_text='PayPal Account-Typ für Gebührenberechnung', max_length=20)),
                ('paypal_monthly_volume', models.DecimalField(decimal_places=2, default=0.0, help_text='Monatliches PayPal-Transaktionsvolumen für gestaffelte Gebühren', max_digits=12)),
                ('paypal_handler_rate', models.DecimalField(decimal_places=4, default=0.0199, help_text='Handler Account Gebührensatz (Standard: 1.99%)', max_digits=5)),
                ('paypal_handler_fixed_fee', models.DecimalField(decimal_places=2, default=0.35, help_text='Handler Account Fixgebühr (Standard: 0.35€)', max_digits=5)),
                ('google_ads_customer_id', models.CharField(blank=True, help_text='Google Ads Customer ID (z.B. 123-456-7890)', max_length=20)),
                ('google_ads_developer_token', models.CharField(blank=True, help_text='Google Ads Developer Token', max_length=100)),
                ('google_ads_refresh_token', models.CharField(blank=True, help_text='Google Ads OAuth2 Refresh Token', max_length=200)),
                ('google_ads_client_id', models.CharField(blank=True, help_text='Google OAuth2 Client ID', max_length=100)),
                ('google_ads_client_secret', models.CharField(blank=True, help_text='Google OAuth2 Client Secret', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopify_stores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Shopify Store',
                'verbose_name_plural': 'Shopify Stores',
                'unique_together': {('shop_domain', 'user')},
            },
        ),
        migrations.AddField(
            model_name='shopifyproduct',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shopify_manager.shopifystore'),
        ),
        migrations.AddField(
            model_name='shopifycollection',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='shopify_manager.shopifystore'),
        ),
        migrations.AddField(
            model_name='shopifyblog',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to='shopify_manager.shopifystore'),
        ),
        migrations.AddField(
            model_name='shippingprofile',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_profiles', to='shopify_manager.shopifystore'),
        ),
        migrations.CreateModel(
            name='SEOAnalysisResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('total_products', models.PositiveIntegerField(default=0)),
                ('products_with_good_seo', models.PositiveIntegerField(default=0)),
                ('products_with_poor_seo', models.PositiveIntegerField(default=0)),
                ('products_with_alt_texts', models.PositiveIntegerField(default=0)),
                ('products_without_alt_texts', models.PositiveIntegerField(default=0)),
                ('products_with_global_seo', models.PositiveIntegerField(default=0)),
                ('products_with_woo_data', models.PositiveIntegerField(default=0)),
                ('products_with_webrex_data', models.PositiveIntegerField(default=0)),
                ('products_with_no_metafields', models.PositiveIntegerField(default=0)),
                ('detailed_results', models.JSONField(blank=True, default=list)),
                ('is_current', models.BooleanField(default=True, help_text='Ist diese Analyse noch aktuell?')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seo_analyses', to='shopify_manager.shopifystore')),
            ],
            options={
                'verbose_name': 'SEO-Analyse-Ergebnis',
                'verbose_name_plural': 'SEO-Analyse-Ergebnisse',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecurringCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name der laufenden Kosten', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Beschreibung der Kosten')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Kostenbetrag', max_digits=10)),
                ('frequency', models.CharField(choices=[('monthly', 'Monatlich'), ('yearly', 'Jährlich'), ('one_time', 'Einmalig')], default='monthly', max_length=20)),
                ('start_date', models.DateField(help_text='Startdatum der Kosten')),
                ('end_date', models.DateField(blank=True, help_text='Enddatum (optional)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_costs', to='shopify_manager.shopifystore')),
            ],
            options={
                'verbose_name': 'Laufende Kosten',
                'verbose_name_plural': 'Laufende Kosten',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdsCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('google_ads', 'Google Ads'), ('facebook_ads', 'Facebook Ads'), ('instagram_ads', 'Instagram Ads'), ('tiktok_ads', 'TikTok Ads'), ('other', 'Andere')], help_text='Werbeplattform', max_length=20)),
                ('campaign_name', models.CharField(help_text='Name der Kampagne', max_length=200)),
                ('cost', models.DecimalField(decimal_places=2, help_text='Werbekosten', max_digits=10)),
                ('clicks', models.PositiveIntegerField(default=0, help_text='Anzahl Klicks')),
                ('impressions', models.PositiveIntegerField(default=0, help_text='Anzahl Impressionen')),
                ('conversions', models.PositiveIntegerField(default=0, help_text='Anzahl Conversions')),
                ('revenue', models.DecimalField(decimal_places=2, default=0.0, help_text='Umsatz aus Werbung', max_digits=10)),
                ('date', models.DateField(help_text='Datum der Werbemaßnahme')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ads_costs', to='shopify_manager.shopifystore')),
            ],
            options={
                'verbose_name': 'Werbekosten',
                'verbose_name_plural': 'Werbekosten',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ShopifySyncLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('import', 'Import von Shopify'), ('export', 'Export zu Shopify'), ('update', 'Update zu Shopify'), ('sync_all', 'Alle Produkte synchronisieren'), ('import_blogs', 'Blogs importieren'), ('import_blog_posts', 'Blog-Posts importieren'), ('import_collections', 'Collections importieren')], max_length=20)),
                ('status', models.CharField(choices=[('success', 'Erfolgreich'), ('error', 'Fehler'), ('partial', 'Teilweise erfolgreich')], max_length=20)),
                ('products_processed', models.PositiveIntegerField(default=0)),
                ('products_success', models.PositiveIntegerField(default=0)),
                ('products_failed', models.PositiveIntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_logs', to='shopify_manager.shopifystore')),
            ],
            options={
                'verbose_name': 'Sync Log',
                'verbose_name_plural': 'Sync Logs',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ShopifyProductCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopify_product_id', models.CharField(help_text='Shopify Product ID', max_length=50)),
                ('shopify_collection_id', models.CharField(help_text='Shopify Collection ID', max_length=50)),
                ('position', models.PositiveIntegerField(default=1, help_text='Position in der Kategorie')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shopify_manager.shopifycollection')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='shopify_manager.shopifyproduct')),
            ],
            options={
                'verbose_name': 'Produkt-Kategorie-Zuordnung',
                'verbose_name_plural': 'Produkt-Kategorie-Zuordnungen',
                'ordering': ['position'],
                'unique_together': {('product', 'collection')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='shopifycollection',
            unique_together={('shopify_id', 'store')},
        ),
        migrations.AlterUniqueTogether(
            name='shopifyblog',
            unique_together={('shopify_id', 'store')},
        ),
        migrations.AlterUniqueTogether(
            name='shippingprofile',
            unique_together={('name', 'store')},
        ),
        migrations.CreateModel(
            name='SalesStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Datum der Statistik')),
                ('period_type', models.CharField(choices=[('daily', 'Täglich'), ('weekly', 'Wöchentlich'), ('monthly', 'Monatlich')], default='daily', max_length=20)),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_profit', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_shipping_costs', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_shopify_fees', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_paypal_fees', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_ads_costs', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_recurring_costs', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_statistics', to='shopify_manager.shopifystore')),
            ],
            options={
                'verbose_name': 'Verkaufsstatistik',
                'verbose_name_plural': 'Verkaufsstatistiken',
                'ordering': ['-date'],
                'unique_together': {('store', 'date', 'period_type')},
            },
        ),
        migrations.CreateModel(
            name='SalesData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopify_order_id', models.CharField(help_text='Shopify Order ID', max_length=50)),
                ('shopify_line_item_id', models.CharField(help_text='Shopify Line Item ID', max_length=50)),
                ('order_date', models.DateTimeField(help_text='Bestelldatum')),
                ('quantity', models.PositiveIntegerField(help_text='Verkaufte Menge')),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Verkaufspreis pro Einheit', max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Gesamtpreis', max_digits=10)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, help_text='Einkaufspreis pro Einheit aus Shopify', max_digits=10, null=True)),
                ('shop_shipping_cost', models.DecimalField(decimal_places=2, default=0.0, help_text='Versandkosten die der Kunde bezahlt hat', max_digits=10)),
                ('actual_shipping_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Tatsächliche Versandkosten (aus Versandprofil)', max_digits=10, null=True)),
                ('shopify_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Shopify Provision', max_digits=10)),
                ('paypal_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='PayPal Provision', max_digits=10)),
                ('payment_gateway_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Payment Gateway Gebühren', max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Mehrwertsteuer', max_digits=10)),
                ('payment_gateway', models.CharField(blank=True, help_text='Payment Gateway (z.B. paypal, shopify_payments, manual)', max_length=100)),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0.0, help_text='Versandkosten (Legacy - nutze shop_shipping_cost)', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sales_data', to='shopify_manager.shopifyproduct')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_data', to='shopify_manager.shopifystore')),
            ],
            options={
                'verbose_name': 'Verkaufsdaten',
                'verbose_name_plural': 'Verkaufsdaten',
                'ordering': ['-order_date'],
                'unique_together': {('shopify_order_id', 'shopify_line_item_id')},
            },
        ),
        migrations.CreateModel(
            name='GoogleAdsProductData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_id', models.CharField(help_text='Google Ads Campaign ID', max_length=100)),
                ('campaign_name', models.CharField(help_text='Campaign Name', max_length=200)),
                ('ad_group_id', models.CharField(blank=True, help_text='Ad Group ID', max_length=100, null=True)),
                ('ad_group_name', models.CharField(blank=True, help_text='Ad Group Name', max_length=200, null=True)),
                ('impressions', models.PositiveIntegerField(default=0, help_text='Anzahl Impressionen')),
                ('clicks', models.PositiveIntegerField(default=0, help_text='Anzahl Klicks')),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, help_text='Werbekosten', max_digits=10)),
                ('conversions', models.DecimalField(decimal_places=2, default=0.0, help_text='Anzahl Conversions', max_digits=10)),
                ('conversion_value', models.DecimalField(decimal_places=2, default=0.0, help_text='Conversion Wert', max_digits=10)),
                ('date', models.DateField(help_text='Datum der Daten')),
                ('ctr', models.DecimalField(decimal_places=4, default=0.0, help_text='Click-Through-Rate', max_digits=6)),
                ('cpc', models.DecimalField(decimal_places=2, default=0.0, help_text='Cost per Click', max_digits=8)),
                ('conversion_rate', models.DecimalField(decimal_places=4, default=0.0, help_text='Conversion Rate', max_digits=6)),
                ('roas', models.DecimalField(decimal_places=2, default=0.0, help_text='Return on Ad Spend', max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='google_ads_data', to='shopify_manager.shopifyproduct')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='google_ads_product_data', to='shopify_manager.shopifystore')),
            ],
            options={
                'verbose_name': 'Google Ads Produktdaten',
                'verbose_name_plural': 'Google Ads Produktdaten',
                'ordering': ['-date'],
                'unique_together': {('store', 'product', 'campaign_id', 'date')},
            },
        ),
    ]
